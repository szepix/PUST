clear all
clc

%Parametry programu
il = 3; %ilość regulatorów
draw = true;
sa = false;

%Zmienne zadaniowe
y_min = -1;
y_max = 12;
y = (y_min:0.1:y_max)';

nach = 0.5; %nachylenie funkcji 

d = (y_max-y_min)/il; %szerokości funkcji przynależnośći

%Wybranie punktu pracy
yr0 = ones(1,il);
yr0(1) = d/2;
yr0(il) = min((y_max+c(il-1))/2+1, y_max);
    if il > 2
        yr0(2:il-1) = (c(2:il-1)+c(1:il-2))./2;
    end


if draw
    figure
    hold on
    %Plotter funkcji przynaleznosci
    for i = 1:il
        if i == 1
            plot(trapmf(y,[-1 -1 c(1)-nach/2 c(1)+ nach/2]));
        elseif i == il
            plot(trapmf(y,[c(il-1)-nach/2 c(il-1)+nach/2 y_max y_max]));
        else
            plot(trapmf(y,[c(i-1)-nach/2 c(i-1)+ nach/2 c(i)-nach/2 c(i)+ nach/2]));
        end
    end
    xlim([-10 120])
    xlabel("y"); ylabel("Funkcja przynależności");
    title(sprintf("Funkcja przynaleznosci dla %i zbiorów rozmytych",il))
    if sa
        print(sprintf('funkcja_przynelznosci_%i.png',il_fun),'-dpng','-r400')
    end
end

zmienna = trapmf(y,[0 0 c(1)-nach/2 c(1)+ nach/2])

